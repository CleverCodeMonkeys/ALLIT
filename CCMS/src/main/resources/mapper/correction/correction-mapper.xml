<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="correction">	
<!-- 컬럼 값이 property -->
	 <resultMap type="correction" id="correctionMap">	
		<result column="BOARD_ID" property="correctionId"/>
		<result column="BOARD_TITLE" property="correctionTitle"/>
		<result column="BOARD_CONTENT" property = "correctionContent"/>
		<result column="RESUME_ID" property="correctionResumeId"/>
		<result column="WRITE_DATE" property="correctionDate"/>
		<result column="SEE" property="correctionSee"/>
		<result column="ID" property="correctionUserId"/>
		
	</resultMap>
	
	<resultMap type="java.util.HashMap" id="correctionHashMap">	
		<result column="BOARD_ID" property="correctionId"/>
		<result column="BOARD_TITLE" property="correctionTitle"/>
		<result column="BOARD_CONTENT" property = "correctionContent"/>
		<result column="RESUME_ID" property="correctionResumeId"/>
		<result column="WRITE_DATE" property="correctionDate"/>
		<result column="SEE" property="correctionSee"/>
		<result column="ID" property="correctionUserId"/>
		<result column="COMMENT_COUNT" property="correctionCommentCount"/>
	</resultMap>
	
	<resultMap type="correctionComment" id="correctionCommentMap">	
		<result column="BOARD_ID" property="correctionId"/>
		<result column="COMMENT_ID" property="commentId"/>
		<result column="COMMENT_CONTENT" property = "commentContent"/>
		<result column="WRITER_ID" property="commentUserId"/>
		<result column="WRITER_DATE" property="commentDate"/>
	</resultMap>
	
	<resultMap id="resumeHashMap" type="java.util.HashMap">
		<result property="resumeTitle" column="INTRO_TITLE"/>
		<result property="resumeContent" column="INTRO_CONTENT"/>
	</resultMap>
	
	<select id="selectCorrectionList"  parameterType="correctionSearchFilter" resultMap="correctionHashMap">
			 SELECT R.BOARD_ID, R.BOARD_TITLE, R.BOARD_CONTENT, R.RESUME_ID,  R.WRITE_DATE, R.SEE, R.ID,
					(SELECT count(*) FROM RESUME_CORRECT_COMMENT C WHERE R.BOARD_ID = C.BOARD_ID) AS COMMENT_COUNT 
					FROM RESUME_CORRECT_BOARD R
		<choose>
			<when test="searchValue == '' ">		
				 <choose>
					<when test="filterValue == 'dateSort'">
						 ORDER BY R.WRITE_DATE DESC
					</when>
					<when test="filterValue == 'commentSort'">
						ORDER BY COMMENT_COUNT DESC, R.WRITE_DATE DESC
					</when>
					<otherwise> 
						ORDER BY R.SEE DESC, R.WRITE_DATE DESC
					 </otherwise>
				</choose>
			</when>
			<otherwise>
				<if test="searchKinds == 'title'">	
					<choose>
						<when test="filterValue == 'dateSort'">
							 WHERE UPPER(R.BOARD_TITLE) LIKE UPPER('%'||#{searchValue}||'%') ORDER BY R.WRITE_DATE DESC
						</when>
						<when test="filterValue == 'commentSort'">
							WHERE UPPER(R.BOARD_TITLE) LIKE UPPER('%'||#{searchValue}||'%') ORDER BY COMMENT_COUNT DESC, R.WRITE_DATE DESC  
						</when>
						<otherwise> 
							WHERE UPPER(R.BOARD_TITLE) LIKE UPPER('%'||#{searchValue}||'%') ORDER BY R.SEE DESC, R.WRITE_DATE DESC
						 </otherwise>
					</choose>
				</if>
				<if test="searchKinds == 'name'">
					<choose>
						<when test="filterValue == 'dateSort'">
							 WHERE UPPER(R.ID) LIKE UPPER('%'||#{searchValue}||'%') ORDER BY R.WRITE_DATE DESC
						</when>
						<when test="filterValue == 'commentSort'">
							WHERE UPPER(R.ID) LIKE UPPER('%'||#{searchValue}||'%') ORDER BY COMMENT_COUNT DESC, R.WRITE_DATE DESC  
						</when>
						<otherwise> 
							WHERE UPPER(R.ID) LIKE UPPER('%'||#{searchValue}||'%') ORDER BY R.SEE DESC, R.WRITE_DATE DESC
						 </otherwise>
					</choose>
				</if>
			</otherwise>
		</choose>
	</select>
	
	<!-- 글 개수  -->
	<select id="selectCorrectionTotalContents" parameterType="correctionSearchFilter" resultType="_int">
		<choose>
			<when test="searchValue == '' ">
			SELECT COUNT(*) FROM RESUME_CORRECT_BOARD
			</when>
			<otherwise>
				<if test="searchKinds == 'title'">
				SELECT COUNT(*) FROM RESUME_CORRECT_BOARD WHERE UPPER(BOARD_TITLE) LIKE UPPER('%'||#{searchValue}||'%')
				</if>
				<if test="searchKinds == 'name'">
				SELECT COUNT(*) FROM RESUME_CORRECT_BOARD WHERE UPPER(ID) LIKE UPPER('%'||#{searchValue}||'%')
				</if> 
			</otherwise>		
		</choose>
	</select>

	<select id="selectCorrectionOne" parameterType="_int" resultMap="correctionMap">
		SELECT * FROM RESUME_CORRECT_BOARD  WHERE BOARD_ID = #{correctionId}
	</select>
	
	
	<!-- 글 insert -->
	<insert id="insertCorrection" parameterType="correction">
		<selectKey keyProperty="correctionId" resultType="_int" order="AFTER">
			SELECT RESUME_CORRECT_SEQ.CURRVAL FROM DUAL
		</selectKey>
		INSERT INTO RESUME_CORRECT_BOARD VALUES(RESUME_CORRECT_SEQ.NEXTVAL , #{correctionTitle},  #{correctionResumeId}, SYSDATE, default, #{correctionUserId}, #{correctionContent})
	</insert>
	
	<!-- 글 1차  insert후 이미지 정상경로로 바꾸기  -->
	<update id="updateRealPathContent" parameterType="correction">
		UPDATE RESUME_CORRECT_BOARD SET BOARD_CONTENT=#{correctionContent} WHERE BOARD_ID = #{correctionId} 
	</update>
	
	<!-- 글 update -->
	<update id="updateCorrection" parameterType="correction">
		UPDATE RESUME_CORRECT_BOARD SET BOARD_TITLE = #{correctionTitle}, BOARD_CONTENT= #{correctionContent}, WRITE_DATE = SYSDATE WHERE BOARD_ID= #{correctionId}
	</update>

	
	<!-- 글 delete -->
	<delete id="deleteCorrection" parameterType="correction">
		DELETE RESUME_CORRECT_BOARD WHERE BOARD_ID = #{correctionId} AND ID = #{correctionUserId}
	</delete>
	
	<delete id ="deleteFromUser" parameterType="string">
	    DELETE RESUME_CORRECT_BOARD WHERE ID = #{id}
	</delete>
	
	<!-- 이력서 불러오기 -->
	<select id="selectResume" resultMap="resumeHashMap" parameterType="string"> SELECT I.INTRO_TITLE, I.INTRO_CONTENT FROM RESUME R JOIN INTRODUCTION I USING(ID) WHERE R.MEMBER_ID = #{id} 
	</select>
	
	<!-- 댓글 불러오기  -->
	<select id="selectCorrectionComment" parameterType="_int" resultMap="correctionCommentMap">
		SELECT * FROM RESUME_CORRECT_COMMENT  WHERE BOARD_ID = #{correctionId}
	</select>
	
	<!-- 조회수 -->
	 <update id="updateCorrectionCount" parameterType="_int">
	 	UPDATE RESUME_CORRECT_BOARD SET SEE = SEE + 1 WHERE BOARD_ID = #{correctionId}
	 </update>
	
	<!-- 댓글 수 -->
	<select id="selectCorrectionCommentCounts" resultType="_int">
		SELECT COUNT(*) FROM RESUME_CORRECT_COMMENT  WHERE BOARD_ID = #{correctionId}
	</select> 
	
	<!-- 댓글 insert -->
	<insert id="insertCorrectionComment" parameterType="correctionComment">
		INSERT INTO RESUME_CORRECT_COMMENT VALUES (#{correctionId}, RESUME_CORRECT_COMMENT_SEQ.NEXTVAL, #{commentContent}, #{commentUserId}, DEFAULT)
	</insert>

	<!-- 댓글 DELETE -->
	<delete id="delteCorrectionComment" parameterType="_int">
		DELETE FROM RESUME_CORRECT_COMMENT WHERE COMMENT_ID = #{commentId}
	</delete>
	
	<!-- 댓글 update -->
	<update id="updateCorrectionComment" parameterType="correctionComment">
		UPDATE  RESUME_CORRECT_COMMENT SET COMMENT_CONTENT = #{commentContent}, WRITER_DATE = SYSDATE WHERE COMMENT_ID=#{commentId}
	</update>
</mapper>
