<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="recruit">

	<select id="selectRecruitList" parameterType="string" resultType="recruit">
		<!-- SELECT NAME, GENDER, SUBSTR(BIRTHDAY, 1, 2)+1900 BIRTHYEAR,
			TO_CHAR(SYSDATE, 'YYYY') - (SUBSTR(BIRTHDAY, 1, 2)+1900) + 1 AGE,
			TITLE, LAST_EDU, LOCATION,
			TO_CHAR(SALARY, '999,999,999') SALARY,
			JOB, REGIST_DATE, UPDATE_DATE, LANGUAGE
		FROM RESUME
		JOIN HOPE_CONDITION USING(ID)
		WHERE DISPLAY = 'Y' -->
		
		<!-- SELECT RESUME.ID "rId", NAME, GENDER, SUBSTR(BIRTHDAY, 1, 2)+1900 BIRTHYEAR,
			TO_CHAR(SYSDATE, 'YYYY') - (SUBSTR(BIRTHDAY, 1, 2)+1900) + 1 AGE,
			TITLE, LAST_EDU, LOCATION,
			TO_CHAR(SALARY, '999,999,999') SALARY,
			JOB, REGIST_DATE, UPDATE_DATE, LANGUAGE,
			DECODE(RESUME.ID, RESUME_ID, 'Y', 'N') SCRAB
		FROM RESUME
		JOIN HOPE_CONDITION ON(RESUME.ID = HOPE_CONDITION.ID)
		LEFT OUTER JOIN SCRAB ON(RESUME.ID = SCRAB.RESUME_ID)
		WHERE DISPLAY = 'Y'
		ORDER BY REGIST_DATE DESC -->
		
		SELECT DISTINCT RESUME.ID "rId", NAME, GENDER, SUBSTR(BIRTHDAY, 1, 2)+1900 BIRTHYEAR,
			TO_CHAR(SYSDATE, 'YYYY') - (SUBSTR(BIRTHDAY, 1, 2)+1900) + 1 AGE,
			TITLE, LAST_EDU, LOCATION,
			TO_CHAR(SALARY, '999,999,999') SALARY,
			JOB, REGIST_DATE, UPDATE_DATE, LANGUAGE,
			CASE
				WHEN RESUME.ID IN (SELECT RESUME_ID FROM SCRAB WHERE MEMBER_ID = #{id}) THEN 'Y'
				ELSE 'N'
			END "SCRAB"
		FROM RESUME
		JOIN HOPE_CONDITION ON(RESUME.ID = HOPE_CONDITION.ID)
		LEFT OUTER JOIN SCRAB ON(RESUME.ID = SCRAB.RESUME_ID)
		WHERE DISPLAY = 'Y'
		ORDER BY REGIST_DATE DESC
	</select>
	
	<select id="selectRecruitTotalContents" resultType="_int">
		SELECT COUNT(*) FROM RESUME
		WHERE DISPLAY = 'Y'
	</select>
	
	<select id="filterRecruitList" parameterType="hashmap" resultType="recruit">
		<!-- SELECT NAME, GENDER, SUBSTR(BIRTHDAY, 1, 2)+1900 BIRTHYEAR,
			TO_CHAR(SYSDATE, 'YYYY') - (SUBSTR(BIRTHDAY, 1, 2)+1900) + 1 AGE,
			TITLE, LAST_EDU, LOCATION,
			TO_CHAR(SALARY, '999,999,999') SALARY,
			JOB, REGIST_DATE, UPDATE_DATE, LANGUAGE
		FROM RESUME
		JOIN HOPE_CONDITION USING(ID) -->
		
		<!-- SELECT RESUME.ID "rId", NAME, GENDER, SUBSTR(BIRTHDAY, 1, 2)+1900 BIRTHYEAR,
			TO_CHAR(SYSDATE, 'YYYY') - (SUBSTR(BIRTHDAY, 1, 2)+1900) + 1 AGE,
			TITLE, LAST_EDU, LOCATION,
			TO_CHAR(SALARY, '999,999,999') SALARY,
			JOB, REGIST_DATE, UPDATE_DATE, LANGUAGE,
			DECODE(RESUME.ID, RESUME_ID, 'Y', 'N') SCRAB
		FROM RESUME
		JOIN HOPE_CONDITION ON(RESUME.ID = HOPE_CONDITION.ID)
		LEFT OUTER JOIN SCRAB ON(RESUME.ID = SCRAB.RESUME_ID) -->
		
		SELECT DISTINCT RESUME.ID "rId", NAME, GENDER, SUBSTR(BIRTHDAY, 1, 2)+1900 BIRTHYEAR,
			TO_CHAR(SYSDATE, 'YYYY') - (SUBSTR(BIRTHDAY, 1, 2)+1900) + 1 AGE,
			TITLE, LAST_EDU, LOCATION,
			TO_CHAR(SALARY, '999,999,999') SALARY,
			JOB, REGIST_DATE, UPDATE_DATE, LANGUAGE,
			CASE
				WHEN RESUME.ID IN (SELECT RESUME_ID FROM SCRAB WHERE MEMBER_ID = #{id}) THEN 'Y'
				ELSE 'N'
			END "SCRAB"
		FROM RESUME
		JOIN HOPE_CONDITION ON(RESUME.ID = HOPE_CONDITION.ID)
		LEFT OUTER JOIN SCRAB ON(RESUME.ID = SCRAB.RESUME_ID)
		<where>
			DISPLAY = 'Y'
			<if test="sql.jobQuery != null">
				AND (${sql.jobQuery})
			</if>
			<if test="sql.languageQuery != null">
				AND (${sql.languageQuery})
			</if>
			<if test="sql.salaryQuery != null">
				AND (${sql.salaryQuery})
			</if>
			<if test="sql.locQuery != null">
				AND (${sql.locQuery})
			</if>
			<if test="sql.eduQuery != null">
				AND (${sql.eduQuery})
			</if>
			<if test="sql.ageQuery != null">
				AND (${sql.ageQuery})
			</if>
			<if test="sql.genderQuery != null">
				AND (${sql.genderQuery})
			</if>
			<if test="sql.searchQuery != null">
				AND (${sql.searchQuery})
			</if>
		</where>
		<if test="sql.orderQuery != null">
			${sql.orderQuery}
		</if>
	</select>

	<select id="filterRecruitTotalContents" resultType="_int">
		SELECT COUNT(*)
		FROM RESUME
		JOIN HOPE_CONDITION USING(ID)
		<where>
			DISPLAY = 'Y'
			<if test="jobQuery != null">
				AND (${jobQuery})
			</if>
			<if test="languageQuery != null">
				AND (${languageQuery})
			</if>
			<if test="salaryQuery != null">
				AND (${salaryQuery})
			</if>
			<if test="locQuery != null">
				AND (${locQuery})
			</if>
			<if test="eduQuery != null">
				AND (${eduQuery})
			</if>
			<if test="ageQuery != null">
				AND (${ageQuery})
			</if>
			<if test="genderQuery != null">
				AND (${genderQuery})
			</if>
			<if test="searchQuery != null">
				AND (${searchQuery})
			</if>
		</where>
		<if test="orderQuery != null">
			${orderQuery}
		</if>
	</select>

	<insert id="insertScrab" parameterType="scrab">
		INSERT INTO SCRAB VALUES(#{id}, #{rId})
	</insert>

	<delete id="deleteScrab" parameterType="scrab">
		DELETE FROM SCRAB WHERE MEMBER_ID = #{id} AND RESUME_ID = #{rId}
	</delete>
	
	<select id="selectScrabList" parameterType="string" resultType="recruit">
		SELECT DISTINCT RESUME.ID "rId", NAME, GENDER, SUBSTR(BIRTHDAY, 1, 2)+1900 BIRTHYEAR,
			TO_CHAR(SYSDATE, 'YYYY') - (SUBSTR(BIRTHDAY, 1, 2)+1900) + 1 AGE,
			TITLE, LAST_EDU, LOCATION,
			TO_CHAR(SALARY, '999,999,999') SALARY,
			JOB, REGIST_DATE, UPDATE_DATE, LANGUAGE,
			CASE
				WHEN RESUME.ID IN (SELECT RESUME_ID FROM SCRAB WHERE MEMBER_ID = #{id}) THEN 'Y'
				ELSE 'N'
			END "SCRAB"
		FROM RESUME
		JOIN HOPE_CONDITION ON(RESUME.ID = HOPE_CONDITION.ID)
		LEFT OUTER JOIN SCRAB ON(RESUME.ID = SCRAB.RESUME_ID)
		WHERE DISPLAY = 'Y'
		AND RESUME.ID IN(
        	SELECT RESUME_ID FROM SCRAB WHERE MEMBER_ID = #{id})
		ORDER BY REGIST_DATE DESC
	</select>
	
	<select id="selectScrabTotalContents" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM RESUME
		LEFT OUTER JOIN SCRAB ON(RESUME.ID = SCRAB.RESUME_ID)
		WHERE SCRAB.MEMBER_ID = #{id}
	</select>

	<select id="selectResumeWriter" parameterType="_int" resultType="string">
		SELECT MEMBER_ID
		FROM RESUME
		WHERE ID = #{rId}
	</select>
	
	<delete id="deleteFromUser" parameterType="string">
		DELETE FROM SCRAB WHERE MEMBER_ID = #{id}
	</delete>

</mapper>






